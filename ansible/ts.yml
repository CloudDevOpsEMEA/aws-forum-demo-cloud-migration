- name: Telemetry Streaming (TS) playbook
  hosts: tag_Role_bigip
  connection: local
  vars_files: "{{ setupfile }}"

  tasks:
    - name: Set connection provider for BIG-IP tasks
      set_fact:
        provider:
          server: "{{ public_dns_name }}"
          server_port: 8443
          user: "{{ bigip.admin_user }}"
          password: "{{ bigip.admin_password }}"
          validate_certs: false

    ### Only needed in case of cloudwatch ###
    - name: Fetch AWS credentials (needed for cloudwatch)
      shell: aws configure get aws_access_key_id
      register: aws_access_key_id
      changed_when: false
      tags: cloudwatch

    ### Only needed in case of cloudwatch ###
    - name: Fetch AWS credentials (needed for cloudwatch)
      shell: aws configure get aws_secret_access_key
      register: aws_secret_access_key
      changed_when: false
      tags: cloudwatch

    ### Only needed in case of cloudwatch ###
    - name: Register AWS credentials as facts
      set_fact: 
        aws_access_key_id={{ aws_access_key_id.stdout }}
        aws_secret_access_key={{ aws_secret_access_key.stdout }}
      tags: cloudwatch

    - name: Wait for BIG-IP to be ready to take configuration
      bigip_wait:
        timeout: 600
        provider: "{{ provider }}"
      tags: cloudwatch

    ####################################
    # Perform TS Deployment Cloudwatch #
    ####################################
    - name: Process jinja template an store result for artifact storage
      template:
        src: templates/ts/cloudwatch.json.j2
        dest: "{{ outputfolder }}/ts_cloudwatch.json"
        mode: 0644
      tags: cloudwatch
  
    - name: Perform TS registration
      include_role:
        name: f5devcentral.atc_deploy
      vars:
        atc_method: POST
        atc_declaration_file: "{{ outputfolder }}/ts_cloudwatch.json"
        atc_delay: 10
        atc_retries: 5
      tags: cloudwatch

    - name: Store result of TS registration for artifact storage
      copy:
        content: |
          {{ (atc_TS_status.json is defined) | ternary(atc_TS_status.json | to_nice_json(indent=2), atc_TS_status.content) }}
        dest: "{{ outputfolder }}/ts_cloudwatch_result.json"
      tags: cloudwatch

    ##################################
    # Perform TS Deployment Graphite #
    ##################################
    - name:  Get a list of private ip address of the target pool members for this application
      set_fact:
        graphite_private_ip: "{{ groups[group_name] | map('extract', hostvars, 'private_ip_address') | list | first }}" 
      vars:
        group_name: "tag_Role_graphite"
      tags: graphite

    - name: Process jinja template an store result for artifact storage
      template:
        src: templates/ts/graphite.json.j2
        dest: "{{ outputfolder }}/ts_graphite.json"
        mode: 0644
      tags: graphite
  
    - name: Perform TS registration
      include_role:
        name: f5devcentral.atc_deploy
      vars:
        atc_method: POST
        atc_declaration_file: "{{ outputfolder }}/ts_graphite.json"
        atc_delay: 10
        atc_retries: 5
      tags: graphite

    - name: Store result of TS registration for artifact storage
      copy:
        content: |
          {{ (atc_TS_status.json is defined) | ternary(atc_TS_status.json | to_nice_json(indent=2), atc_TS_status.content) }}
        dest: "{{ outputfolder }}/ts_graphite_result.json"
      tags: graphite
  
  ####################################
  # Manual verification on BIG-IP(s) #
  ####################################
  post_tasks:
    - name: Final result verification on BIG-IP 
      debug:
        msg: >
          Verify on BIG-IQ(s) if your desired results was achieved
            > Admin UI   : https://{{ public_dns_name }}:8443
            > REST URI   : https://{{ public_dns_name }}:8443/mgmt/shared/telemetry/declare
            > DOCS URL   : https://clouddocs.f5.com/products/extensions/f5-telemetry-streaming/latest
            > SCHEMA REF : https://clouddocs.f5.com/products/extensions/f5-telemetry-streaming/latest/schema-reference.html
            > GITHUB SRC : https://github.com/F5Networks/f5-telemetry-streaming
